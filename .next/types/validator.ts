// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../src/app/abstract/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/abstract">> = Specific
  const handler = {} as typeof import("../../src/app/abstract/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/api-reference/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/api-reference">> = Specific
  const handler = {} as typeof import("../../src/app/api-reference/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/appendices/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/appendices">> = Specific
  const handler = {} as typeof import("../../src/app/appendices/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/community-governance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/community-governance">> = Specific
  const handler = {} as typeof import("../../src/app/community-governance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/components/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/components">> = Specific
  const handler = {} as typeof import("../../src/app/components/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/conclusion/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/conclusion">> = Specific
  const handler = {} as typeof import("../../src/app/conclusion/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/ecosystem-partnerships/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/ecosystem-partnerships">> = Specific
  const handler = {} as typeof import("../../src/app/ecosystem-partnerships/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/getting-started/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/getting-started">> = Specific
  const handler = {} as typeof import("../../src/app/getting-started/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/introduction/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/introduction">> = Specific
  const handler = {} as typeof import("../../src/app/introduction/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/legal-compliance/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/legal-compliance">> = Specific
  const handler = {} as typeof import("../../src/app/legal-compliance/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/market-analysis/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/market-analysis">> = Specific
  const handler = {} as typeof import("../../src/app/market-analysis/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/problem/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/problem">> = Specific
  const handler = {} as typeof import("../../src/app/problem/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/recurx-token/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/recurx-token">> = Specific
  const handler = {} as typeof import("../../src/app/recurx-token/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/roadmap/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/roadmap">> = Specific
  const handler = {} as typeof import("../../src/app/roadmap/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/solution/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/solution">> = Specific
  const handler = {} as typeof import("../../src/app/solution/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/technology-overview/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/technology-overview">> = Specific
  const handler = {} as typeof import("../../src/app/technology-overview/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/testnet-deployment/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/testnet-deployment">> = Specific
  const handler = {} as typeof import("../../src/app/testnet-deployment/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/token-value-accural/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/token-value-accural">> = Specific
  const handler = {} as typeof import("../../src/app/token-value-accural/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/use-cases/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/use-cases">> = Specific
  const handler = {} as typeof import("../../src/app/use-cases/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../src/app/vision-mission/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/vision-mission">> = Specific
  const handler = {} as typeof import("../../src/app/vision-mission/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}







// Validate ../../src/app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../src/app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
